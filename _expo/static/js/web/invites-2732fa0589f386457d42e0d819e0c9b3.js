__d(function(g,r,i,a,m,e,d){"use strict";Object.defineProperty(e,'__esModule',{value:!0}),e.createInviteLink=s,e.validateInviteToken=o,e.deleteInviteLink=c,e.getWorldInviteLinks=l,Object.defineProperty(e,"invitesDB",{enumerable:!0,get:function(){return u}});var n=r(d[0]),t=r(d[1]);async function s(s){try{const{worldId:o,hoursValid:c=24}=s,{data:{user:l},error:u}=await n.supabase.auth.getUser();if(u||!l)return t.logger.error('invites','User not authenticated',u),{success:!1,error:'User not authenticated'};const{data:v,error:k}=await n.supabase.from('users').select('id').eq('auth_id',l.id).single();if(k||!v)return t.logger.error('invites','User profile not found for auth user',k),{success:!1,error:'User profile not found'};const f={world_id:o,created_by:v.id};if(24!==c){const n=new Date(Date.now()+60*c*60*1e3);f.expires_at=n.toISOString()}t.logger.info('invites',`Creating invite link for world ${o}`,{hoursValid:c});const{data:w,error:p}=await n.supabase.from('invite_links').insert([f]).select().single();return p?(t.logger.error('invites','Failed to create invite link',p),{success:!1,error:p.message}):w?(t.logger.success(`Invite link created with token: ${w.token}`),{success:!0,inviteLink:w}):(t.logger.error('invites','No data returned from insert'),{success:!1,error:'Failed to create invite link'})}catch(n){return t.logger.error('invites','Unexpected error creating invite link',n),{success:!1,error:n instanceof Error?n.message:'Unknown error'}}}async function o(s){try{t.logger.info('invites',`Validating invite token: ${s}`);const{data:o,error:c}=await n.supabase.from('invite_links').select('world_id, expires_at').eq('token',s).single();if(c)return t.logger.error('invites','Invalid invite token',c),{success:!1,error:'Invalid or expired invite link'};if(!o)return t.logger.error('invites','No invite found for token'),{success:!1,error:'Invalid invite link'};const l=new Date(o.expires_at);return l<new Date?(t.logger.warn('invites','Invite token expired',{expiresAt:l}),{success:!1,error:'This invite link has expired'}):(t.logger.success(`Valid invite token for world: ${o.world_id}`),{success:!0,worldId:o.world_id})}catch(n){return t.logger.error('invites','Unexpected error validating token',n),{success:!1,error:n instanceof Error?n.message:'Unknown error'}}}async function c(s){try{t.logger.info('invites',`Deleting invite link: ${s}`);const{error:o}=await n.supabase.from('invite_links').delete().eq('token',s);return o?(t.logger.error('invites','Failed to delete invite link',o),{success:!1,error:o.message}):(t.logger.success('Invite link deleted successfully'),{success:!0})}catch(n){return t.logger.error('invites','Unexpected error deleting invite link',n),{success:!1,error:n instanceof Error?n.message:'Unknown error'}}}async function l(s){try{t.logger.info('invites',`Fetching invite links for world: ${s}`);const{data:o,error:c}=await n.supabase.from('invite_links').select('*').eq('world_id',s).gt('expires_at',(new Date).toISOString()).order('created_at',{ascending:!1});return c?(t.logger.error('invites','Failed to fetch invite links',c),{success:!1,error:c.message}):(t.logger.info('invites',`Found ${o?.length||0} active invite links`),{success:!0,invites:o||[]})}catch(n){return t.logger.error('invites','Unexpected error fetching invite links',n),{success:!1,error:n instanceof Error?n.message:'Unknown error'}}}const u={createInviteLink:s,validateInviteToken:o,deleteInviteLink:c,getWorldInviteLinks:l}},1590,[769,1595]);
__d(function(g,r,i,a,m,_e,d){"use strict";Object.defineProperty(_e,'__esModule',{value:!0}),Object.defineProperty(_e,"Logger",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(_e,"logger",{enumerable:!0,get:function(){return t.logger}});var e,t=r(d[0]),n=(e=t)&&e.__esModule?e:{default:e}},1595,[757]);